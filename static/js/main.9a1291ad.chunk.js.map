{"version":3,"sources":["API/ProductsAPI.js","Components/Sidebar.component.js","Components/Searchbar.component.js","Components/Grid.component.js","App.js","serviceWorker.js","index.js"],"names":["GetProducts","pageNumber","a","fetch","response","json","pages","page","Sidebar","props","handlePriceChange","e","type","persist","setState","startPrice","target","value","endPrice","reset","handleCriteriaApply","state","criteria","handleSearchCriteria","className","this","onChange","onClick","React","Component","Searchbar","forwardRef","ref","useState","product","setProduct","useImperativeHandle","handleProductSearch","ProductGrid","loadingCSS","height","margin","getProducts","then","products","console","log","prevProducts","currentPage","Products","currentProducts","scrollHandler","h","loadingRef","b","document","body","st","sh","clientHeight","handleReset","sideBar","current","searchBar","filteredProducts","filter","Amount","name","filterProducts","Name","createRef","addEventListener","targetRef","map","key","Id","Category","Payment","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.9a1291ad.chunk.js","sourcesContent":["const GetProducts = async(pageNumber) => {\r\n    const response = await fetch('http://yati-malik.github.io/cars24-test/products.json');\r\n    const pages = await response.json();\r\n    let page = 'Page'+pageNumber;\r\n    return pages[page];\r\n};\r\n\r\nexport default GetProducts;","import React from 'react';\r\n\r\nclass Sidebar extends React.Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {startPrice: '', endPrice: ''}\r\n    }\r\n    handlePriceChange = (e,type) => {\r\n        e.persist();\r\n        //  validations will be added here\r\n        switch(type){\r\n            case 'start': this.setState({startPrice: e.target.value});\r\n            break;\r\n            case 'end': this.setState({endPrice: e.target.value});\r\n            break;\r\n            default: ;\r\n        }\r\n    }\r\n    reset = () => {\r\n        this.setState({startPrice: '', endPrice: ''})\r\n    }\r\n    handleCriteriaApply = () => {\r\n        if(this.state.startPrice < this.state.endPrice){\r\n            let criteria = {startPrice: this.state.startPrice, endPrice: this.state.endPrice};\r\n            this.props.handleSearchCriteria(criteria);\r\n        }\r\n        else{\r\n            return false;\r\n        }\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <div className=\"sidebar\">\r\n                <h2>Search Criteria</h2>\r\n                <div>\r\n                    <span className=\"bold\">Price range</span>\r\n                </div>\r\n                <div >\r\n                    <label>Start Price</label>\r\n                    <input type=\"number\" value={this.state.startPrice} onChange={(e) => this.handlePriceChange(e,'start')}></input>\r\n                </div>\r\n                <div >\r\n                    <label>End Price</label>\r\n                    <input type=\"number\" value={this.state.endPrice} onChange={(e) => this.handlePriceChange(e,'end')}></input>\r\n                </div>\r\n                <div className=\"apply\">\r\n                    <input type=\"button\"  value=\"Apply\" onClick={this.handleCriteriaApply}></input>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Sidebar;","import React, { useState, forwardRef, useImperativeHandle } from \"react\";\r\n\r\nconst Searchbar = forwardRef((props,ref) => {\r\n  let [product, setProduct] = useState(\"\");\r\n  let handleOnChange = (e) => {\r\n    setProduct(e.target.value);\r\n  };\r\n  useImperativeHandle(ref, () => ({\r\n    reset() {\r\n      setProduct('');\r\n    }\r\n  }))\r\n  return (\r\n    <div className=\"search-bar\">\r\n      <div>\r\n        <div className=\"form-group row\">\r\n          <div className=\"col-lg-8\">\r\n            <input\r\n              type=\"text\"\r\n              value = {product}\r\n              className=\"form-control\"\r\n              onChange={handleOnChange}\r\n            />\r\n          </div>\r\n          <div className=\"col-lg\">\r\n            <input\r\n              type=\"button\"\r\n              className=\"form-control\"\r\n              value=\"Search\"\r\n              onClick={() => props.handleProductSearch(product)}\r\n            />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n});\r\n\r\nexport default Searchbar;\r\n","import React from \"react\";\r\nimport getProducts from \"../API/ProductsAPI\";\r\nimport Sidebar from \"./Sidebar.component\"\r\nimport Searchbar from \"./Searchbar.component\";\r\n\r\nclass ProductGrid extends React.Component {\r\n  constructor() {\r\n    super();\r\n    this.state = { products: [] };\r\n    this.currentPage = 1;\r\n    this.sideBar = React.createRef();\r\n    this.searchBar = React.createRef();\r\n  }\r\n  loadingCSS = {\r\n    height: \"100px\",\r\n    margin: \"30px\",\r\n  };\r\n\r\n  getProducts = (page) => {\r\n    getProducts(page).then((products) => {\r\n        console.log(products);\r\n      let prevProducts = this.state.products;\r\n      if(this.currentPage === 1){\r\n        this.setState({products: products.Products});\r\n      }\r\n      else{\r\n        let currentProducts = [...prevProducts, ...products.Products];\r\n        this.setState({ products: currentProducts });\r\n      }\r\n      \r\n    });\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.getProducts(this.currentPage);\r\n    this.loadingRef.addEventListener(\"scroll\", (e) => this.scrollHandler(e));\r\n  }\r\n\r\n  scrollHandler = (e) => {\r\n    let h = this.loadingRef,\r\n      b = document.body,\r\n      st = \"scrollTop\",\r\n      sh = \"scrollHeight\";\r\n    let percentageLoaded =\r\n      ((h[st] || b[st]) / ((h[sh] || b[sh]) - h.clientHeight)) * 100;\r\n    if (percentageLoaded > 73) {\r\n      this.currentPage += 1;\r\n      this.getProducts(this.currentPage);\r\n    }\r\n  };\r\n\r\n  handleReset = () => {\r\n    this.currentPage =1;\r\n    this.sideBar.current.reset();\r\n    this.searchBar.current.reset();\r\n    this.getProducts(this.currentPage);\r\n  };\r\n\r\n  handleSearchCriteria = (criteria) => {\r\n    let startPrice = criteria.startPrice;\r\n    let endPrice = criteria.endPrice;\r\n    let currentProducts = this.state.products;\r\n    let filteredProducts = currentProducts.filter(\r\n      (product) => product.Amount >= startPrice && product.Amount < endPrice\r\n    );\r\n    this.setState({ products: filteredProducts });\r\n  };\r\n\r\n  handleProductSearch = (name) => {\r\n    let products = this.state.products;\r\n    let filterProducts = products.filter((product) => product.Name === name);\r\n    this.setState({ products: filterProducts });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"app-container\">\r\n        <Sidebar\r\n          handleSearchCriteria={(criteria) =>\r\n            this.handleSearchCriteria(criteria)\r\n          }\r\n          ref = {this.sideBar}\r\n        />\r\n        <Searchbar\r\n          handleProductSearch={(name) => this.handleProductSearch(name)}\r\n          ref = {this.searchBar}\r\n        />\r\n        <div className=\"grid-container\">\r\n          <div className=\"tbody-container\">\r\n            <div className=\"product thead-container\">\r\n              <div className=\"col-lg\">Name</div>\r\n              <div className=\"col-lg\">Category</div>\r\n              <div className=\"col-lg\">Amount</div>\r\n              <div className=\"col-lg\">Payment</div>\r\n            </div>\r\n            <div\r\n              className=\"productDiv\"\r\n              ref={(loadingRef) => (this.loadingRef = loadingRef)}\r\n            >\r\n              <div ref={(targetRef) => (this.targetRef = targetRef)}>\r\n                {this.state.products.map((product) => {\r\n                  return (\r\n                    <div className=\"product\" key={product.Id}>\r\n                      <div className=\"col-lg\">{product.Name}</div>\r\n                      <div className=\"col-lg\">{product.Category}</div>\r\n                      <div className=\"col-lg\">{product.Amount}</div>\r\n                      <div className=\"col-lg\">{product.Payment}</div>\r\n                    </div>\r\n                  );\r\n                })}\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className=\"reset\" onClick={this.handleReset} >\r\n              <span>Reset</span>\r\n          </div> \r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ProductGrid;\r\n","import React from \"react\";\nimport \"./App.css\";\nimport ProductGrid from \"./Components/Grid.component\";\n\n\nfunction App() {\n  return (\n        <ProductGrid />\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}