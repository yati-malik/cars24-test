{"version":3,"sources":["API/ProductsAPI.js","Components/Sidebar.component.js","Components/Searchbar.component.js","Components/Grid.component.js","App.js","serviceWorker.js","index.js"],"names":["GetProducts","pageNumber","a","fetch","response","json","pages","page","Sidebar","props","handlePriceChange","e","type","persist","setState","startPrice","target","value","endPrice","reset","handleCriteriaApply","state","toast","warn","position","POSITION","TOP_LEFT","criteria","handleSearchCriteria","className","autoClose","this","onChange","onClick","React","Component","Searchbar","forwardRef","ref","useState","product","setProduct","useImperativeHandle","placeholder","TOP_RIGHT","handleProductSearch","ProductGrid","loadingCSS","height","margin","getProducts","then","products","undefined","prevProducts","currentProducts","Products","scrollHandler","h","loadingRef","b","document","body","st","sh","clientHeight","currentPage","handleReset","sideBar","current","searchBar","searchName","name","createRef","addEventListener","targetRef","filter","Amount","Name","toUpperCase","includes","map","key","Id","Category","Payment","App","Boolean","window","location","hostname","match","ReactDOM","render","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.2b65809c.chunk.js","sourcesContent":["const GetProducts = async(pageNumber) => {\r\n    const response = await fetch('https://yati-malik.github.io/cars24-test/products.json');\r\n    const pages = await response.json();\r\n    let page = 'Page'+pageNumber;\r\n    return pages[page];\r\n};\r\n\r\nexport default GetProducts;","import React from \"react\";\r\nimport { ToastContainer, toast } from \"react-toastify\";\r\n\r\nclass Sidebar extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { startPrice: \"\", endPrice: \"\" };\r\n  }\r\n  handlePriceChange = (e, type) => {\r\n    e.persist();\r\n    switch (type) {\r\n      case \"start\":\r\n        this.setState({ startPrice: e.target.value });\r\n        break;\r\n      case \"end\":\r\n        this.setState({ endPrice: e.target.value });\r\n        break;\r\n      default:\r\n    }\r\n  };\r\n  reset = () => {\r\n    this.setState({ startPrice: \"\", endPrice: \"\" });\r\n  };\r\n  handleCriteriaApply = () => {\r\n    if (this.state.startPrice < this.state.endPrice) {\r\n      let criteria = {\r\n        startPrice: this.state.startPrice,\r\n        endPrice: this.state.endPrice,\r\n      };\r\n      this.props.handleSearchCriteria(criteria);\r\n    } else {\r\n      toast.warn(\"Start price can not be less than end price !\", {\r\n        position: toast.POSITION.TOP_LEFT,\r\n      });\r\n      return false;\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"sidebar\">\r\n        <ToastContainer autoClose={3000} />\r\n        <h2>Search Criteria</h2>\r\n        <hr></hr>\r\n        <div>\r\n          <div>\r\n            <span className=\"bold\">Price range</span>\r\n          </div>\r\n          <div>\r\n            <label>Start Price</label>\r\n            <input\r\n              type=\"number\"\r\n              value={this.state.startPrice}\r\n              onChange={(e) => this.handlePriceChange(e, \"start\")}\r\n            ></input>\r\n          </div>\r\n          <div>\r\n            <label>End Price</label>\r\n            <input\r\n              type=\"number\"\r\n              value={this.state.endPrice}\r\n              onChange={(e) => this.handlePriceChange(e, \"end\")}\r\n            ></input>\r\n          </div>\r\n          <div className=\"apply\">\r\n            <input\r\n              type=\"button\"\r\n              value=\"Apply\"\r\n              onClick={this.handleCriteriaApply}\r\n            ></input>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Sidebar;\r\n","import React, { useState, forwardRef, useImperativeHandle } from \"react\";\r\nimport { ToastContainer, toast } from \"react-toastify\";\r\n\r\nconst Searchbar = forwardRef((props, ref) => {\r\n  let [product, setProduct] = useState(\"\");\r\n  let handleOnChange = (e) => {\r\n    setProduct(e.target.value);\r\n  };\r\n  let handleProductSearch = () => {\r\n    if (product == \"\") {\r\n      toast.warn(\"Search field value is empty !\", {\r\n        position: toast.POSITION.TOP_RIGHT,\r\n      });\r\n    } else {\r\n      props.handleProductSearch(product);\r\n    }\r\n  };\r\n  useImperativeHandle(ref, () => ({\r\n    reset() {\r\n      setProduct(\"\");\r\n    },\r\n  }));\r\n  return (\r\n    <div className=\"search-bar\">\r\n      <ToastContainer autoClose={3000}/>\r\n      <div>\r\n          <input\r\n            type=\"text\"\r\n            value={product}\r\n            placeholder = \"Name\"\r\n            className=\"form-control\"\r\n            onChange={handleOnChange}\r\n          />\r\n          <input\r\n            type=\"button\"\r\n            className=\"search\"\r\n            value=\"Search\"\r\n            onClick={handleProductSearch}\r\n          />\r\n      </div>\r\n    </div>\r\n  );\r\n});\r\n\r\nexport default Searchbar;\r\n","import React from \"react\";\r\nimport getProducts from \"../API/ProductsAPI\";\r\nimport Sidebar from \"./Sidebar.component\";\r\nimport Searchbar from \"./Searchbar.component\";\r\n\r\nclass ProductGrid extends React.Component {\r\n  constructor() {\r\n    super();\r\n    this.state = { products: [], startPrice: 0, endPrice: 0, searchName: \"\" };\r\n    this.currentPage = 1;\r\n    this.sideBar = React.createRef();\r\n    this.searchBar = React.createRef();\r\n  }\r\n  loadingCSS = {\r\n    height: \"100px\",\r\n    margin: \"30px\",\r\n  };\r\n\r\n  getProducts = (page) => {\r\n    getProducts(page).then((products) => {\r\n      if (products != undefined) {\r\n        let prevProducts = this.state.products;\r\n        let currentProducts = [...prevProducts, ...products.Products];\r\n        this.setState({ products: currentProducts });\r\n      }\r\n    });\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.getProducts(this.currentPage);\r\n    this.loadingRef.addEventListener(\"scroll\", (e) => this.scrollHandler(e));\r\n  }\r\n\r\n  scrollHandler = (e) => {\r\n    let h = this.loadingRef,\r\n      b = document.body,\r\n      st = \"scrollTop\",\r\n      sh = \"scrollHeight\";\r\n    let percentageLoaded =\r\n      ((h[st] || b[st]) / ((h[sh] || b[sh]) - h.clientHeight)) * 100;\r\n    if (percentageLoaded > 73) {\r\n      this.currentPage += 1;\r\n      this.getProducts(this.currentPage);\r\n    }\r\n  };\r\n\r\n  handleReset = () => {\r\n    this.sideBar.current.reset();\r\n    this.searchBar.current.reset();\r\n    this.setState({ startPrice: 0, endPrice: 0, searchName: \"\" });\r\n  };\r\n\r\n  handleSearchCriteria = (criteria) => {\r\n    let startPrice = criteria.startPrice;\r\n    let endPrice = criteria.endPrice;\r\n    this.setState({ startPrice: startPrice, endPrice: endPrice });\r\n  };\r\n\r\n  handleProductSearch = (name) => {\r\n    this.setState({ searchName: name });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"app-container\">\r\n        <Sidebar\r\n          handleSearchCriteria={(criteria) =>\r\n            this.handleSearchCriteria(criteria)\r\n          }\r\n          ref={this.sideBar}\r\n        />\r\n        <Searchbar\r\n          handleProductSearch={(name) => this.handleProductSearch(name)}\r\n          ref={this.searchBar}\r\n        />\r\n        <div className=\"grid-container\">\r\n          <div className=\"tbody-container\">\r\n            <div className=\"product thead-container\">\r\n              <div className=\"col-item\">Name</div>\r\n              <div className=\"col-item\">Category</div>\r\n              <div className=\"col-item\">Amount</div>\r\n              <div className=\"col-item\">Payment</div>\r\n            </div>\r\n            <div\r\n              className=\"productDiv\"\r\n              ref={(loadingRef) => (this.loadingRef = loadingRef)}\r\n            >\r\n              <div ref={(targetRef) => (this.targetRef = targetRef)}>\r\n                {this.state.products\r\n                  .filter((product) => {\r\n                    let isPriceValid = true;\r\n                    if (\r\n                      !(\r\n                        this.state.startPrice === 0 && this.state.endPrice === 0\r\n                      )\r\n                    ) {\r\n                      if (\r\n                        this.state.startPrice > product.Amount ||\r\n                        this.state.endPrice < product.Amount\r\n                      ) {\r\n                        return false;\r\n                      }\r\n                    }\r\n\r\n                    return product.Name.toUpperCase().includes(\r\n                      this.state.searchName.toUpperCase()\r\n                    );\r\n                  })\r\n                  .map((product) => {\r\n                    return (\r\n                      <div className=\"product\" key={product.Id}>\r\n                        <div className=\"col-item\">{product.Name}</div>\r\n                        <div className=\"col-item\">{product.Category}</div>\r\n                        <div className=\"col-item\">{product.Amount}</div>\r\n                        <div className=\"col-item\">{product.Payment}</div>\r\n                      </div>\r\n                    );\r\n                  })}\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className=\"reset\" onClick={this.handleReset}>\r\n            <span>Reset</span>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ProductGrid;\r\n","import React from \"react\";\nimport \"./App.css\";\nimport ProductGrid from \"./Components/Grid.component\";\n\n\nfunction App() {\n  return (\n        <ProductGrid />\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'react-toastify/dist/ReactToastify.css';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n\nserviceWorker.unregister();\n"],"sourceRoot":""}