{"version":3,"sources":["Components/Sidebar/sidebar.js","Redux/Sidebar/sidebarActions.js","Redux/Common/actionTypes.js","Components/Searchbar/searchbar.js","Redux/Searchbar/searchbarActions.js","API/ProductsAPI.js","Components/ProductGrid/productGrid.js","Redux/ProductGrid/productGridActions.js","Container/HomePage/homePage.js","Redux/Common/productGridReducer.js","Redux/Store/rootReducer.js","Redux/Store/store.js","App.js","serviceWorker.js","index.js"],"names":["connect","state","ownProps","filters","productReducer","setFilters","type","props","useState","startPrice","setStartPrice","endPrice","setEndPrice","useEffect","handlePriceChange","e","persist","value","target","test","className","autoClose","onChange","onClick","toast","warn","position","POSITION","TOP_LEFT","criteria","name","setSearch","product","setProduct","placeholder","TOP_RIGHT","GetProducts","pageNumber","a","fetch","response","json","pages","page","ProductGrid","getProducts","then","products","undefined","prevProducts","currentProducts","Products","setState","scrollHandler","h","loadingRef","b","document","body","st","sh","clientHeight","currentPage","handleReset","resetFilters","handleProductSearch","searchName","this","addEventListener","ref","targetRef","filter","Amount","Name","toUpperCase","includes","map","key","Id","Category","Payment","React","Component","HomePage","initialState","action","rootReducer","combineReducers","store","createStore","devToolsEnhancer","App","Boolean","window","location","hostname","match","ReactDOM","render","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.a519bc0b.chunk.js","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { ToastContainer, toast } from \"react-toastify\";\r\nimport { SetFilters as setFilters } from \"../../Redux/Sidebar/sidebarActions\";\r\nimport { connect } from \"react-redux\";\r\n\r\nfunction Sidebar(props) {\r\n\r\n  const [startPrice, setStartPrice] = useState(props.filters.startPrice);\r\n  const [endPrice, setEndPrice] = useState(props.filters.endPrice);\r\n\r\n  useEffect(() => {\r\n    setStartPrice(props.filters.startPrice);\r\n    setEndPrice(props.filters.endPrice);\r\n  },[props.filters.startPrice, props.filters.endPrice])\r\n\r\n  const handlePriceChange = (e, type) => {\r\n    e.persist();\r\n    let value = e.target.value;\r\n    let reg = /[0-9]/g;\r\n    if(value != '' && !reg.test(value)){\r\n      return false;\r\n    }\r\n    switch (type) {\r\n      case \"start\":\r\n        setStartPrice(value);\r\n        break;\r\n      case \"end\":\r\n        setEndPrice(value);\r\n        break;\r\n      default:\r\n    }\r\n  };\r\n\r\n  const handleCriteriaApply = () => {\r\n    if (startPrice < endPrice) {\r\n      let criteria = {\r\n        startPrice: startPrice,\r\n        endPrice: endPrice,\r\n      };\r\n      props.setFilters(criteria);\r\n    } else {\r\n      toast.warn(\"Start price can not be less than end price !\", {\r\n        position: toast.POSITION.TOP_LEFT,\r\n      });\r\n      return false;\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"sidebar\">\r\n      <ToastContainer autoClose={3000} />\r\n      <h2>Search Criteria</h2>\r\n      <hr></hr>\r\n      <div>\r\n        <div>\r\n          <span className=\"bold\">Price range</span>\r\n        </div>\r\n        <div>\r\n          <label>Start Price</label>\r\n          <br></br>\r\n          <input\r\n            type=\"text\"\r\n            value={startPrice}\r\n            onChange={(e) => { return handlePriceChange(e, \"start\")}}\r\n          ></input>\r\n        </div>\r\n        <div>\r\n          <label>End Price</label>\r\n          <br></br>\r\n          <input\r\n            type=\"text\"\r\n            value={endPrice}\r\n            onChange={(e) => {return handlePriceChange(e, \"end\")}}\r\n          ></input>\r\n        </div>\r\n        <div className=\"apply\">\r\n          <input\r\n            type=\"button\"\r\n            value=\"Apply\"\r\n            onClick={handleCriteriaApply}\r\n          ></input>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n  const { filters } = state.productReducer;\r\n  debugger;\r\n  return { filters };\r\n};\r\n\r\nexport default connect(mapStateToProps, { setFilters })(Sidebar);\r\n","import { SET_FILTERS } from '../Common/actionTypes';\r\n\r\nexport function SetFilters(filters){\r\n    return{\r\n        type: SET_FILTERS,\r\n        filters: filters\r\n    }\r\n}","export const RESET_FILTERS = 'RESET_FILTERS';\r\n\r\nexport const SET_FILTERS = \"SET_FILTERS\";\r\n\r\nexport const SET_SEARCH = \"SET_SEARCH\";","import React, { useState, forwardRef, useImperativeHandle, useEffect } from \"react\";\r\nimport { ToastContainer, toast } from \"react-toastify\";\r\nimport {SetSearch as setSearch} from \"../../Redux/Searchbar/searchbarActions\";\r\nimport { connect } from \"react-redux\";\r\n\r\nconst Searchbar = (props) => {\r\n  let [product, setProduct] = useState(props.name);\r\n\r\n  useEffect(() => {\r\n    setProduct(props.name);\r\n  },[props.name])\r\n\r\n  let handleOnChange = (e) => {\r\n    setProduct(e.target.value);\r\n  };\r\n  let handleProductSearch = () => {\r\n    if (product == \"\") {\r\n      toast.warn(\"Search field value is empty !\", {\r\n        position: toast.POSITION.TOP_RIGHT,\r\n      });\r\n    } else {\r\n      props.setSearch(product);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"search-bar\">\r\n      <ToastContainer autoClose={3000} />\r\n      <div className=\"search-container\">\r\n        <input\r\n          type=\"text\"\r\n          value={product}\r\n          placeholder=\"Name\"\r\n          className=\"search-box\"\r\n          onChange={handleOnChange}\r\n        />\r\n        <input\r\n          type=\"button\"\r\n          className=\"search\"\r\n          value=\"Search\"\r\n          onClick={handleProductSearch}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n  const { name } = state.productReducer;\r\n  return { name };\r\n};\r\n\r\nexport default connect(mapStateToProps, { setSearch })(Searchbar);\r\n","import { SET_SEARCH } from \"../Common/actionTypes\";\r\n\r\nexport function SetSearch(name) {\r\n  return {\r\n    type: SET_SEARCH,\r\n    name: name\r\n  };\r\n}\r\n","const GetProducts = async(pageNumber) => {\r\n    const response = await fetch('https://yati-malik.github.io/cars24-test/products.json');\r\n    const pages = await response.json();\r\n    let page = 'Page'+pageNumber;\r\n    return pages[page];\r\n};\r\n\r\nexport default GetProducts;","import React from \"react\";\r\nimport getProducts from \"../../API/ProductsAPI\";\r\nimport { connect } from \"react-redux\";\r\nimport { ResetFilters as resetFilters } from \"../../Redux/ProductGrid/productGridActions\";\r\n\r\nclass ProductGrid extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { products: [] };\r\n    this.currentPage = 1;\r\n  }\r\n\r\n  getProducts = (page) => {\r\n    getProducts(page).then((products) => {\r\n      if (products != undefined) {\r\n        let prevProducts = this.state.products;\r\n        let currentProducts = [...prevProducts, ...products.Products];\r\n        this.setState({ products: currentProducts });\r\n      }\r\n    });\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.getProducts(this.currentPage);\r\n    this.loadingRef.addEventListener(\"scroll\", (e) => this.scrollHandler(e));\r\n  }\r\n\r\n  scrollHandler = (e) => {\r\n    let h = this.loadingRef,\r\n      b = document.body,\r\n      st = \"scrollTop\",\r\n      sh = \"scrollHeight\";\r\n    let percentageLoaded =\r\n      ((h[st] || b[st]) / ((h[sh] || b[sh]) - h.clientHeight)) * 100;\r\n    if (percentageLoaded > 73) {\r\n      this.currentPage += 1;\r\n      this.getProducts(this.currentPage);\r\n    }\r\n  };\r\n\r\n  handleReset = () => {\r\n    this.props.resetFilters();\r\n  };\r\n\r\n  handleProductSearch = (name) => {\r\n    this.setState({ searchName: name });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"grid-container\">\r\n        <div className=\"tbody-container\">\r\n          <div className=\"product thead-container\">\r\n            <div className=\"col-item\">Name</div>\r\n            <div className=\"col-item\">Category</div>\r\n            <div className=\"col-item\">Amount</div>\r\n            <div className=\"col-item\">Payment</div>\r\n          </div>\r\n          <div\r\n            className=\"productDiv\"\r\n            ref={(loadingRef) => (this.loadingRef = loadingRef)}\r\n          >\r\n            <div ref={(targetRef) => (this.targetRef = targetRef)}>\r\n              {this.state.products\r\n                .filter((product) => {\r\n                  let isPriceValid = true;\r\n                  let startPrice = this.props.filters.startPrice;\r\n                  let endPrice = this.props.filters.endPrice;\r\n                  if (!(startPrice == '' && endPrice == '')) {\r\n                    if (\r\n                      startPrice > product.Amount ||\r\n                      endPrice < product.Amount\r\n                    ) {\r\n                      return false;\r\n                    }\r\n                  }\r\n\r\n                  return product.Name.toUpperCase().includes(\r\n                    this.props.name.toUpperCase()\r\n                  );\r\n                })\r\n                .map((product) => {\r\n                  return (\r\n                    <div className=\"product\" key={product.Id}>\r\n                      <div className=\"col-item\">{product.Name}</div>\r\n                      <div className=\"col-item\">{product.Category}</div>\r\n                      <div className=\"col-item\">{product.Amount}</div>\r\n                      <div className=\"col-item\">{product.Payment}</div>\r\n                    </div>\r\n                  );\r\n                })}\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"reset\" onClick={this.handleReset}>\r\n          <span>Reset</span>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n  return state.productReducer;\r\n};\r\n\r\nexport default connect(mapStateToProps, { resetFilters })(ProductGrid);\r\n","import {RESET_FILTERS} from '../Common/actionTypes';\r\n\r\nexport function ResetFilters(){\r\n    return {\r\n        type: RESET_FILTERS\r\n    }\r\n}","import React from \"react\";\r\nimport Sidebar from \"../../Components/Sidebar/sidebar\";\r\nimport Searchbar from \"../../Components/Searchbar/searchbar\";\r\nimport ProductGrid from '../../Components/ProductGrid/productGrid';\r\n\r\nfunction HomePage() {\r\n  return (\r\n    <div className=\"app-container\">\r\n      <Sidebar />\r\n      <Searchbar />\r\n      <ProductGrid />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default HomePage;\r\n","import {SET_FILTERS, SET_SEARCH, RESET_FILTERS} from './actionTypes';\r\n\r\nconst initialState = {\r\n    name: '',\r\n    filters: {\r\n        startPrice: '',\r\n        endPrice: ''\r\n    }\r\n}\r\n\r\nfunction ProductGrid(state=initialState,action){\r\n    switch(action.type){\r\n        case SET_SEARCH: \r\n            return {...state, name: action.name}\r\n        case SET_FILTERS:\r\n            return {...state, filters: action.filters}\r\n        case RESET_FILTERS:\r\n            debugger;\r\n            return {...state, ...initialState}\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default ProductGrid;","import {combineReducers} from 'redux';\r\nimport productReducer from '../Common/productGridReducer'\r\n\r\nconst rootReducer = combineReducers({\r\n    productReducer\r\n})\r\n\r\nexport default rootReducer;","import { createStore, applyMiddleware } from \"redux\";\r\nimport rootReducer from \"./rootReducer\";\r\nimport { devToolsEnhancer  } from \"redux-devtools-extension\";\r\n\r\n\r\nconst store = createStore(\r\n  rootReducer,\r\n  devToolsEnhancer() \r\n);\r\n\r\nexport default store;\r\n","import React from \"react\";\nimport \"./App.css\";\nimport HomePage from \"./Container/HomePage/homePage\";\nimport store from './Redux/Store/store';\nimport { Provider as ReduxProvider } from \"react-redux\";\n\nfunction App() {\n  return (\n    <ReduxProvider store={store}>\n      <HomePage />\n    </ReduxProvider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './font.css';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'react-toastify/dist/ReactToastify.css';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n\nserviceWorker.unregister();\n"],"sourceRoot":""}